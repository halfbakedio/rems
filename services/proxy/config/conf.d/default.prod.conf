# vim: set syntax=nginx ft=nginx:

upstream rems-api {
  server top2.nearest.of.rems-api.internal:8080;
}

upstream rems-app {
  server top2.nearest.of.rems-app.internal:8080;
}

# upstream rems-www {
#   server top2.nearest.of.rems-www.internal:8080;
# }

# server {
#   listen 8080;
#   listen [::]:8080;
#
#   server_name derptown.com www.derptown.com;
#
#   index index.html;
#
#   location / {
#     proxy_pass http://rems-www/;
#     proxy_redirect off;
#     proxy_buffering off;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Host $server_name;
#     # or? proxy_set_header X-Forwarded-Host $http_host;
#     proxy_set_header X-Forwarded-Port $server_port;
#   }
# }

server {
  listen 8080 default_server;
  listen [::]:8080 default_server;

  server_name app.derptown.com;

  proxy_http_version 1.1;

  if ($http_x_forwarded_proto = "http") {
    return 301 https://$http_host$request_uri;
  }

  location /healthz {
    return 200 "ok";
  }

  location /api/ {
    proxy_pass http://rems-api/api/;

    proxy_redirect off;
    proxy_buffering off;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Port $server_port;
  }

  location / {
    proxy_pass http://rems-app/;

    # overwrite setting in /etc/nginx/nginx.conf
    index index.html index.htm;

    proxy_ssl_protocols TLSv1.2;
    proxy_ssl_server_name on;
    expires off;

    proxy_redirect off;
    proxy_buffering off;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-NginX-Proxy true;

    proxy_cache_bypass $http_upgrade;
  }
}

# health check server
server {
  listen 8080;

  server_name health.check;

  location /healthz {
    access_log /dev/stdout;
    return 200 "ok";
  }
}
